#!/usr/bin/env ruby

require 'optparse'

options = {}
OptionParser.new do |opts|
  opts.banner = 'Usage: ansible.rb [options]'

  opts.on('-c', '--command COMMAND', 'Specify command') do |cmd|
    options[:command] = cmd
  end

  opts.on('-m', '--module MODULE', 'Specify module') do |mod|
    options[:module] = mod
  end

  opts.on('-t', '--tags TAGS', 'Specify tags') do |tags|
    options[:tags] = tags
  end
end.parse!

class AnsibleData
  attr_reader :skip_tags, :playbook, :ip_address, :vars, :tags

  MODULE_DATA = {
    'jenkins' => {
      playbook: 'setup_jenkins.yml',
      ip_address: 'JENKINS_IP',
      skip_tags: 'plugins'
    },
    'ansible' => {
      playbook: 'setup_ansible.yml',
      ip_address: 'ANSIBLE_IP'
    },
    'dev' => {
      playbook: 'setup_sports_app_dev.yml',
      ip_address: 'DEV_IP'
    }
  }
  def initialize(options)
    module_data = MODULE_DATA[options[:module]]
    @skip_tags = "--skip-tags #{module_data[:skip_tags]}" if module_data[:skip_tags]
    @playbook = module_data[:playbook]
    @ip_address = ENV[module_data[:ip_address]]
    @vars = '--extra-vars @extra_vars.yml'
    @tags = "--tags #{options[:tags]}" if options[:tags]
  end
end

class Runner
  def initialize(options)
    @command = options[:command]
    @module = options[:module]
    @data = AnsibleData.new(options)
  end

  def run
    if @command == 'apply'
      run_command('init')
      run_command("apply #{terraform_args}")
    elsif @command == 'destroy'
      run_command("destroy #{terraform_args}")
    elsif @command == 'run'
      system("cd ansible && ansible-playbook #{ansible_args}")
    end
  end

  def ansible_args
    "--inventory #{@data.ip_address}, #{@data.vars} #{@data.tags} #{@data.skip_tags} #{@data.playbook}"
  end

  def sub_dir
    @module == 'dev' ? 'sports_app_dev' : @module
  end

  def terraform_args
    '-var-file=../terraform.tfvars --auto-approve'
  end

  def run_command(cmd)
    tf_cmd = "terraform -chdir=\"$(pwd)/terraform/#{sub_dir}\" #{cmd}"
    system(tf_cmd)
  end
end

Runner.new(options).run
